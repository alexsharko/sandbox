<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>mockJSON | musicseeker.eu</title>

<style type=text/css>
html { background:#ccc;}
body { min-height:600px;padding:10px;margin:10px; background:white;  font-family:sans-serif;font-size:10pt;}
ul { padding:0px;margin:0px;display:block; }
li { width:190px; height:66px;overflow:hidden; vertical-align:top;display:inline-block; background:#ececec; padding:2px; margin:4px; text-align:center;}
#results { }
#footer { margin-top:40px; border-top:1px #aaa solid; clear:both;}
.api , .company { font-size:80%; font-style:italic; }
</style>
</head>


<body id=page>

<div id=content></div>

<div id=footer>
<p class=api>mockJson</p>
<p class=company>(c) 2012 martimedia ltd</p>
</div>

</body>

<script id="jukeTmpl" type="text/x-jquery-tmpl">
	
<h1>${title}</h1>

<div id="player">
	<div id="intro"><p>Welcome to the Maritmedia Juke box.</p><p>Click on an artist to play their tunes via spotify</p></div>
</div>

<div id=results>
	
	<ul>
	{{each(i,item) tracks}}

	<li>
		
		<div class=slot>
		<div class='track spotit' data-artist='${item.artist}' data-track='${item.trackA}'>${item.trackA}</div>
		<div class='artist spotit' data-artist='${item.artist}' >${item.artist}</div>
		<div class='track spotit' data-artist='${item.artist}' data-track='${item.trackB}' >${item.trackB}</div>
		 <div >${item.letter} ${item.number}</div>
		</div>

	</li>
	{{/each}}
	</ul>
	</div>
</script>


<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js" type="text/javascript"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jquery.templates/beta1/jquery.tmpl.min.js" type="text/javascript" ></script>
 
<script src="/sandbox/scripts/jquery.mockjson.js" type="text/javascript"></script>

<script type="text/javascript">

	var mis = {

		getTracks: function (jukebox) {
			mis.jsonGet(jukebox, "#content", function (data) {

				mis.applyTemplate("#jukeTmpl", data, "#content");

				//mis.applyTemplate("#jukeTmpl", data, "#results");
				/*
				$(".spotit").on("click", function (event) {
					mis.jsonGet("spotify.ashx?artist=" + $(this).data("artist"), "#player", function (data) {
						mis.playTracks($(this).data("track"), data);
					});
					
				});
				*/
			});
		},

		// Helper methods
		getParam: function (name, default_val) {
			name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]"); var regexS = "[\\?&]" + name + "=([^&#]*)";
			var regex = new RegExp(regexS); var results = regex.exec(window.location.href);
			if (results === null) return default_val; else return results[1];
		},

		jsonGet: function (url, dest, callback) {
			$(dest).html(""); //<div class=loading><img src=../assets/loader2.gif></img>loading....</div>");

			jQuery.ajax({ type: "GET", url: url, dataType: "json",
				success: function (results) { callback(results); },
				error: function (XMLHttpRequest, textStatus, errorThrown) {
					$(dest).html("<div class=errro>Opps, something went wrong</div>");
				}
			});
		},


		initJsonMock: function(uri){
		
				var template = {
				
			"title": "martijuke",
			"description": "Sounds of the 80s",
			"modle" : "Rockola GP160",
			"rows" : "10",
			"columns" : 8,
			"tracks|5-10":[
			   {
			   	"letter": "@LETTER_UPPER",
   				"number": "@NUMBER",
   				"artist": "@MALE_FIRST_NAME @LAST_NAME",
   				"trackA": "@FEMALE_FIRST_NAME",
   				"trackB": "@MALE_FIRST_NAME"
			   }]
			   };

   		//		LOREM_IPSUM, LOREM

   			$.mockJSON(/mockme\.json/, template);
		},

		applyTemplate: function (template, data, dest) {
			$(dest).html("");
			$(template).tmpl(data).prependTo(dest);
		}
	}

	function formatJSON(obj, indent) {
		var result = [];
		indent = (indent || '') + '  ';
		var type = $.isArray(obj)
        ? 'array'
        : (obj === null)
            ? 'null'
            : typeof obj;

		switch (type) {
			case 'object':
				result.push('{ ');
				for (var i in obj) {
					result.push('"' + i + '" : ' + formatJSON(obj[i], indent) + ',');
				}
				var last = result.pop();
				result.push(last.substr(0, last.length - 1));
				result.push('}');
				break;

			case 'array':
				result.push('[ ');
				for (var i = 0; i < obj.length; i++) {
					result.push(formatJSON(obj[i], indent) + ',');
				}
				var last = result.pop();
				result.push(last.substr(0, last.length - 1));
				result.push(']');
				break;

			case 'string':
				result.push('"' + obj + '"');
				break;

			default:
				result.push(obj + '');
				break;
		}

		return result.join('\n' + indent);
	}


	jQuery(document).ready(function () {
		mis.initJsonMock();
		mis.getTracks("mockme.json");
	//	mis.getTracks("martijuke.js");
	});

</script>

</html>